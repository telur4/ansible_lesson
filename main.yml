# 結果一覧
# ok: [localhost]           問題なし
# changed: [localhost]      変更
# skipping: [localhost]     スキップ
# fatal: [localhost]        エラー

---
# PLAY [localhost]
- hosts: localhost
  # TASK [Gathering Facts]
  become: yes
  vars:
    - ruby_version: 2.3.1
    - python_version: 3.5.2
  tasks:
    # TASK [disable iptables]
    - name: disable iptables
      service: name=iptables state=stopped enabled=no
    # TASK [install libselinux-python]
    - name: install libselinux-python
      yum: name=libselinux-python state=latest
    # TASK [Disabled SELinux]
    - name: Disabled SELinux
      selinux:
        state: disabled
    # TASK [remove localtime]
    - name: remove localtime
      file: path=/etc/localtime state=absent
    # TASK [change timezone]
    - name: change timezone
      file: src=/usr/share/zoneinfo/Asia/Tokyo dest=/etc/localtime state=link force=yes mode=0644
    # TASK [install remi repository]
    - name: install remi repository
      command: rpm -Uvh --force http://rpms.famillecollet.com/enterprise/remi-release-6.rpm
    # TASK [install man]
    - name: install man
      yum: name=man state=latest
    # TASK [install apache] 
    - name: install apache
      yum: name=httpd state=latest
    # TASK [start apache and enabled]
    - name: start apache and enabled
      service: name=httpd state=started enabled=yes
    # TASK [change owner]
    - name: change owner
      file: dest=/var/www/html owner=vagrant recurse=yes
    # TASK [copy httpd.conf]
    - name: copy httpd.conf
      copy: src=httpd.conf.custom dest=/etc/httpd/conf/httpd.conf backup=yes
      notify:
        - restart apache
    # TASK [install gd-last]
    - name: install gd-last
      yum: name=gd-last enablerepo=remi state=latest
    # TASK [install php]
    - name: install php
      yum:
        name:
          - php
          - php-common
          - php-pdo
          - php-cli
          - php-devel
          - php-mysqlnd
          - php-mbstring
          - php-gd
          - php-intl
          - php-xml
        enablerepo: remi-php56
        state: present
      notify:
        - restart apache
    # TASK [copy php.ini.custom]
    - name: copy php.ini.custom
      copy: src=php.ini.custom dest=/etc/php.ini backup=yes
      notify:
        - restart apache

    # TASK [install mysql repository]
    - name: install mysql repository
      command: rpm -Uvh --force http://dev.mysql.com/get/mysql-community-release-el6-5.noarch.rpm
    # TASK [install mysql]
    - name: install mysql
      yum:
        name:
          - mysql
          - mysql-devel
          - mysql-server
          - mysql-utilities
        state: present
    # TASK [copy my.cnf.custom]
    - name: copy my.cnf.custom
      copy: src=my.cnf.custom dest=/etc/my.cnf backup=yes
    # TASK [start mysql and enabled]
    - name: start mysql and enabled
      service: name=mysqld state=started enabled=yes
    # TASK [install ruby dependencies] 
    - name: install ruby dependencies
      yum:
        name:
          - gcc
          - openssl
          - openssl-devel
          - rpm-build
          - gcc-c++
          - bzip2
          - bzip2-devel
          - libtool
          - zlib
          - zlib-devel
          - httpd-devel
          - openssl-devel
          - curl-devel
          - ncurses-devel
          - gdbm-devel
          - readline
          - readline-devel
          - sqlite
          - sqlite-devel
          - libyaml-devel
          - libffi-devel
          - bison
        enablerepo: remi,epel
        state: present

    # TASK [check rbenv installed]
    - name: check rbenv installed
      command: test -x /home/vagrant/.rbenv
      register: rbenv_present
      become: no
      failed_when: rbenv_present.rc not in [0, 1]
    # TASK [git clone rbenv]
    - name: git clone rbenv
      git: repo=https://github.com/sstephenson/rbenv.git dest=/home/vagrant/.rbenv
      when: rbenv_present.rc == 1
      become: no
    # TASK [update bash_profile]
    - name: update bash_profile
      copy: src=bash_profile.custom dest=/home/vagrant/.bash_profile backup=yes
      become: no

    # TASK [check ruby-build installed]
    - name: check ruby-build installed
      command: test -x /home/vagrant/.rbenv/plugins/ruby-build
      register: rbuild_present
      become: no
      failed_when: rbuild_present.rc not in [0, 1]
    # TASK [git clone ruby-build]
    - name: git clone ruby-build
      git: repo=https://github.com/sstephenson/ruby-build.git dest=/home/vagrant/.rbenv/plugins/ruby-build
      when: rbuild_present.rc == 1
      become: no

    # TASK [update rbenv]
    - name: update rbenv
      command: git pull --rebase chdir=/home/vagrant/.rbenv
      become: no
    # TASK [update ruby-build]
    - name: update ruby-build
      command: git pull --rebase chdir=/home/vagrant/.rbenv/plugins/ruby-build
      become: no

    # TASK [check ruby installed]
    - name: check ruby installed
      shell: /bin/bash -lc "rbenv versions | grep {{ruby_version}}"
      register: ruby_installed
      become: no
      failed_when: ruby_installed.rc not in [0, 1]
    # TASK [install ruby]
    # - name: install ruby
      # shell: /bin/bash -lc "rbenv install {{ruby_version}} && rbenv rehash && rbenv global {{ruby_version}}"
      # when: ruby_installed.rc == 1
      # become: no

    # TASK [check pyenv installed]
    - name: check pyenv installed
      command: test -x /home/vagrant/.pyenv
      register: pyenv_present
      become: no
      failed_when: pyenv_present.rc not in [0, 1]
    # TASK [git clone pyenv]
    - name: git clone pyenv
      git: repo=https://github.com/yyuu/pyenv.git dest=/home/vagrant/.pyenv
      when: pyenv_present.rc == 1
      become: no

    # TASK [check pyvirtual installed]
    - name: check pyvirtual installed
      command: test -x /home/vagrant/.pyenv/plugins/pyenv-virtualenv
      register: pyvirtual_present
      become: no
      failed_when: pyvirtual_present.rc not in [0, 1]
    # TASK [git clone pyenv-virtual]
    - name: git clone pyenv-virtual
      git: repo=https://github.com/yyuu/pyenv-virtualenv.git dest=/home/vagrant/.pyenv/plugins/pyenv-virtualenv
      when: pyvirtual_present.rc == 1
      become: no

    # TASK [update pyenv]
    - name: update pyenv
      command: git pull --rebase chdir=/home/vagrant/.pyenv
      become: no
    # TASK [update pyenv-virtualenv]
    - name: update pyenv-virtualenv
      command: git pull --rebase chdir=/home/vagrant/.pyenv/plugins/pyenv-virtualenv
      become: no

    # TASK [check python installed]
    - name: check python installed
      shell: /bin/bash -lc "pyenv versions | grep {{python_version}}"
      register: python_installed
      become: no
      failed_when: python_installed.rc not in [0, 1]
    # TASK [install python]
    # - name: install python
      # shell: /bin/bash -lc "pyenv install {{python_version}} && pyenv rehash && pyenv global {{python_version}}"
      # when: python_installed.rc == 1
      # become: no

    # TASK [check node js installed]
    - name: check node js installed
      shell: /bin/bash -lc "node -v"
      register: node_installed
      become: no
      failed_when: node_installed.rc not in [0, 1, 127]
    # TASK [install node script]
    - name: install node script
      shell: /bin/bash -lc "curl -sL https://rpm.nodesource.com/setup | bash -"
      when: node_installed.rc == 127
    # TASK [install nodejs]
    - name: install nodejs
      yum: name=nodejs state=latest
      when: node_installed.rc == 127
    # TASK [install npm]
    - name: install npm
      yum: name=npm state=latest
      when: node_installed.rc == 127

    # TASK [change locale]
    - name: change locale
      lineinfile: >-
        dest=/etc/sysconfig/i18n
        state=present
        regexp=^LANG=
        line='LANG="ja_JP.UTF-8"'

  handlers:
    - name: restart apache
      service: name=httpd state=restarted
